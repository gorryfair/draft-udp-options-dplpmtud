<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
 which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
There has to be one entity for each item to be referenced.
An alternate method (rfc include) is described in the references. -->
<!ENTITY RFC768 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC1063 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1063.xml">
<!ENTITY RFC1191 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.1191.xml">
<!ENTITY RFC2119 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2923 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2923.xml">
<!ENTITY RFC4821 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4821.xml">
<!ENTITY RFC8085 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8085.xml">
<!ENTITY RFC8174 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC8201 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8201.xml">
<!ENTITY RFC8304 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8304.xml">
<!ENTITY RFC0001 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0001.xml">
<!ENTITY I-D.ietf-tsvwg-udp-options SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-tsvwg-udp-options-08.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- For a complete list and description of processing instructions (PIs),
    please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
    (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
    (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-fairhurst-tsvwg-udp-options-dplpmtud-03"
     ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
                 or pre5378Trust200902
    you can add the attributes updates="NNNN" and obsoletes="NNNN"
    they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the
     full title is longer than 39 characters -->

    <title abbrev="UDPO DPLPMTUD">Datagram PLPMTUD for UDP Options</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Godred Fairhurst" initials="G" surname="Fairhurst">
      <organization>University of Aberdeen</organization>

      <address>
        <postal>
          <street>School of Engineering</street>

          <street>Fraser Noble Building</street>

          <city>Aberdeen</city>

          <region></region>

          <code>AB24 3UE</code>

          <country>UK</country>
        </postal>

        <email>gorry@erg.abdn.ac.uk</email>
      </address>
    </author>

    <author fullname="Tom Jones" initials="T" surname="Jones">
      <organization>University of Aberdeen</organization>

      <address>
        <postal>
          <street>School of Engineering</street>

          <street>Fraser Noble Building</street>

          <city>Aberdeen</city>

          <region></region>

          <code>AB24 3UE</code>

          <country>UK</country>
        </postal>

        <email>tom@erg.abdn.ac.uk</email>
      </address>
    </author>

    <date year="2020" />

    <!-- Meta-data Declarations -->

    <area>Transport</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <!-- WG name at the upperleft corner of the doc,
     IETF is fine for individual submissions. If this element is not
     present, the default is "Network Working Group", which is used by the
     RFC Editor as a nod to the history of the IETF. -->

    <keyword>UDP UDP-Options PMTUD PLPMTUD DPLPMTUD</keyword>

    <abstract>
      <t>This document specifies how a UDP Options sender implements Datagram
      Packetization Layer Path Maximum Transmission Unit Discovery (DPLPMTUD)
      as a robust method for Path Maximum Transmission Unit Discovery.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>The User Datagram Protocol <xref target="RFC0768"></xref> offers a
      minimal transport service on top of IP and is frequently used as a
      substrate for other protocols. Applications using UDP frequently have to
      implement basic transport services such as Path Maximum Transmission
      Unit Discovery (PMTUD) themselves. Section 3.5 of UDP Guidelines <xref
      target="RFC8085"></xref> recommends that applications implement some
      form of Path MTU Discovery to avoid the generation of IP fragments:</t>

      <t>"Consequently, an application SHOULD either use the path MTU
      information provided by the IP layer or implement Path MTU Discovery
      (PMTUD)".</t>

      <t>The UDP API <xref target="RFC8304"></xref> offers calls for
      applications to receive ICMP Packet Too Big (PTB) messages and to
      control the size of messages that are sent, but does not offer any
      automatic mechanisms for an application to discover the maximum packet
      size supported by a path. Applications and upper layer protocols are
      left to implement robust PMTUD mechanisms of their own.</t>

      <t>Packetization Layer PMTUD (PLPMTUD) <xref target="RFC4821"></xref>
      describes a method for a Packetization Layer (such as UDP with options)
      to search for the largest MTU supported on a path in the absence of ICMP
      PTB messages. Datagram PLPMTUD <xref
      target="RFC0001"></xref> describes PMTUD probing
      and search algorithms for datagram transports that do not solely rely on
      ICMP PTB messages. This allows the Packetization Layer (PL) to offer a
      probing mechanism which works in the presence of lost probes. However,
      UDP is unable itself to offer the required probing mechanisms to
      implement DPLPMTUD without some additional transport services.</t>

      <t>This document specifies the additional functionality required to
      perform DPLPMTUD with UDP Options <xref
      target="I-D.ietf-tsvwg-udp-options"></xref>as a service to upper-layer
      protocols. UDP Options supplies functionality that can be
      used to implement DPLPMTUD within the UDP transport service.
      Implementing DPLPMTUD using UDP Options avoids the need for each upper
      layer protocol or application to implement the DPLPMTUD method.</t>
    </section>

    <section title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in BCP 14 <xref
      target="RFC2119"></xref> <xref target="RFC8174"></xref> when, and only
      when, they appear in all capitals, as shown here.</t>

      <t>The structure of the present document follows the structure used to
      describe DPLPMTUD for other transports <xref
      target="RFC0001"></xref>.</t>
    </section>

    <section anchor="UDPOPT-PLPMTUD" title="DPLPMTUD for UDP Options">
      <t>The DPLPMTUD PL endpoint implements the method specified in <xref
      target="RFC0001"></xref>.</t>

      <section title="Confirmation of Connectivity across a Path">
        <t>The DPLPMTUD method requires that the PL is able to confirm
        connectivity on the path (Section 5.2 of <xref
        target="RFC0001"></xref>).</t>

        <t>The UDP API does not offer a mechanism for a sender to confirm
        connectivity, a UDP Options sender SHOULD use reception of an option
        that elicits a positive confirmation (i.e. Timestamps, ECHO
        Request/Response) to confirm connectivity of the path.</t>
      </section>

      <section title="Sending UDP-Options Probe Packets">
	<t>This method relies upon the sender Packetization Layer to be able to
	generate probe packets with a specific size. UDP Options enables
	padding to be added to a UDP datagram that is used as these Probe
	Packets through the use of repeated additional End of List (EOL)
	bytes.</t>

        <t>A PL needs to determine that the current path continues to support
        the size of datagram that the application is currently sending when in
        the DPLPMTUD search_done state i.e., to detect black-holing of data
        (Section 4.3 of <xref
        target="RFC0001"></xref>). UDP Options can
        achieve this by sending probe packets padded to the size of the
        PLPMTU.</t>

        <t>A PL also needs, from time to time, to determine whether the
        current path can support a larger size of datagram that the current
        PLPMTU. UDP Options can achieve this by sending probe packets padded
        to the size required for the Packet Probe.</t>

        <t>A UDP options sender MUST be able to send probes up to the maximum
        for the size the local interface supports, and not constrained by the
        maximum PMTU set by network layer mechanisms (such as PMTUD <xref
        target="RFC1063"></xref><xref target="RFC8201"></xref>). There are
	various options described in DPLPMTUD to send a Packet Probe to test
	the size of packet supported by a path (see Section 4.1 of <xref
	target="RFC0001"></xref>). This specification
	recommends "Probing using padding data", to protect against having to
	retransmit application data when a probe fails.</t>

	<t> The DPLPMTUD search process can be accelerated by using knowledge
	of the MTU of its peers local interface as a target MTU. A UDP Options
	Sender SHOULD share the local interface MTU using the MSS Option (see
	section 5.2 of <xref target="I-D.ietf-tsvwg-udp-options"></xref>. </t>

        <section title="Sending Packet Probes using the Echo Request Option Request Option">
	  <t>The RECOMMENDED method sends a Packet Probe with the Echo Request
	  Option (RES) together with any padding needed to inflate to the size
	  required for the Packet Probe. The reception of this option generates
	  an response with an Echo Response Option that confirms reception of
	  each received Packet Probe.</t>

          <t>Implementations ought to only send a Packet Probe with a Request
          Probe Option when required by their local DPLPMTUD state machine,
          i.e., when probing to grow the PLPMTU or to confirm the current
          PLPMTU.</t>

	  <t>Packet Probes consume network capacity and incur endpoint
	  processing (see Section 4.1 of <xref target="RFC0001"></xref>).</t>

          <t>Implementations MAY track multiple requests and respond to them
          with a single packet.</t>

          <t>The UDP Options used in this method are described in section 6 of
          <xref target="I-D.ietf-tsvwg-udp-options"></xref>:</t>

          <t><list style="symbols">
              <t>The Echo Request Option (RES) is set by a sending PL to
              solicit a response from a remote endpoint. A four-byte token
              identifies each request.</t>

              <t>The Echo Response Option (REQ) is generated by the UDP
              Options receiver in response to reception of a previously
              received Echo Request Option. Each Echo Response Option echoes a
              previously received four-byte token.</t>
            </list>The token value allows implementations to distinguish
          between acknowledgements for initial Packet Probes and
          acknowledgements confirming receipt of subsequent Packet Probes
          (e.g., travelling along alternate paths with a larger round trip
          time). Each Packet Probe needs to be uniquely identifiable by the
          UDP Options sender within the Maximum Segment Lifetime (MSL). The
          UDP Options sender therefore needs to not recycle token values until
          they have expired or have been acknowledged. A four byte value for
          the token field provides sufficient space for multiple unique probes
          to be made within the MSL.</t>

          <t>The initial value of the four byte token field SHOULD be assigned
          to a randomised value to enhance protection from off-path attacks,
          as described in section 5.1 of <xref target="RFC8085"></xref>).</t>

          <t>The procedure to handle the loss of a datagram is the
          responsibility of the sender of the request. Implementations MAY
          track multiple requests and respond to them with a single packet
          carrying the Echo Response Option (REQ).</t>
        </section>

        <section title="Sending Packet Probes that include Application Data">
          <t>The RECOMMENDED approach to generate Packet Probes is to send a
          probe that contains only control information.</t>

	  <t>A sender could include application data in Packet Probes (see
	  Section 4.1 of <xref target="RFC0001"></xref> discusses the merits
	  and demerits of this approach). A Packet Probe then contains a data
	  block supplied by an application that is combined with padding to
	  inflate the length of the datagram to the size required for the probe
	  and additionally include an Echo Request Option or Timestamp Option
	  (Section 5.9 <xref target="I-D.ietf-tsvwg-udp-options"></xref>).</t>

          <t>If the application/transport needs protection from the loss of
          data in the Packet Probe payload, the application/transport could
          perform transport-layer retransmission/repair of the data block
          (e.g., by retransmission after loss is detected or by duplicating
          the data block in a datagram without the padding) <xref
          target="RFC8085"></xref>.</t>
        </section>
      </section>

      <section title="Validating the Path with UDP Options">
	<t>A PL needs to validate that the path continues to support the PLPMTU
	discovered in a previous search for a suitable PLPMTU value (see
	Section 6.1.4 of <xref target="RFC0001"></xref>). This could be
	provided by an upper layer protocol confirming correct reception of
	data by the remote PL, but there is no generic mechanism to provide
	this in UDP Options, and therefore requires generation of a Packet
	Probe of size PLPMTU to confirm the path. This Packet Probe could use
	either the ECHO Response Option or the TimeStamp option to elicit a
	response from the remote PL.</t>

        <section title="Sending Packet Probes using Timestamps">
          <t>Reception of a valid Timestamp Option echoed by the remote
          endpoint can be used to infer connectivity and that packets of the
          current size are being received by the remote PL. This can provide
          useful feedback, even over paths with asymmetric capacity and/or
          that carry UDP Option flows that have very asymmetric datagram
          rates, because an echo of the most recent timestamp still indicates
          reception of at least one packet of the transmitted size. This is
          sufficient to confirm there is no black hole (see Section 2.1 of
          <xref target="RFC2923"></xref>).</t>

          <t>When sending a probe to increase the PLPMTU, a timestamp might be
          unable to unambiguously identify that a specific Packet Probe has
          been received <xref target="KP87"></xref>. Timestamp mechanisms
          therefore cannot be used to confirm the reception of individual
          probe messages and cannot be used to stimulate a response from the
          remote peer. Packet Probes used to search for a larger PLPMTU MUST
          include the Echo Request Option.</t>
        </section>
      </section>

      <section title="PTB Message Handling for this Method">
	<t>A UDP Options sender implemented DPLPMTUD MAY ignore received ICMP
	PTB messages.</t>

        <t>A UDP Options sender that utilises ICMP PTB messages received to a
        Packet Probe MUST use the quoted packet to validate the UDP port
        information in combination with the token and/or timestamp value
        contained in the UDP Option, before processing the packet using the
        DPLPMTUD method (Section 4.6.1 of <xref
        target="RFC0001"></xref>). An implementation
        unable to support this validation needs to ignore received ICMP PTB
        messages.</t>

        <t>As in other implementations of DPLPMTUD, a PL implementing this
        specification MUST suspend processing of ICMP PTB by the network layer
        (as specified in PMTUD <xref target="RFC1191"></xref> <xref
        target="RFC8201"></xref>) for each flow utilising DPLPMTUD.</t>
      </section>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>Gorry Fairhurst and Tom Jones are supported by funding provided by
      the University of Aberdeen.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This memo includes no requests to IANA.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>The security considerations for using UDP Options are described in
      <xref target="I-D.ietf-tsvwg-udp-options"></xref>. The proposed new
      method does not change the integrity protection offered by the UDP
      options method.</t>

      <t>The security considerations for using DPLPMTUD are described in <xref
      target="RFC0001"></xref>. The proposed new method does not change the
      ICMP PTB message validation method described DPLPMTUD.</t>
    </section>
  </middle>

  <back>
    <!-- References split into informative and normative -->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->

      &RFC768;

      &RFC1191;

      &RFC2119;

      &RFC8174;

      &RFC0001;

      &I-D.ietf-tsvwg-udp-options;
    </references>

    <references title="Informative References">
      &RFC1063;

      &RFC2923;

      &RFC4821;

      &RFC8085;

      &RFC8201;

      &RFC8304;

      <reference anchor="KP87">
        <front>
          <title>Improving Round-Trip Time Estimates in Reliable Transport
          Protocols</title>

          <author initials="P" surname="Karn"></author>

          <author initials="C" surname="Partridge"></author>

          <date year="1987" />
        </front>
      </reference>
    </references>

    <section title="Revision Notes">
      <t>XXX Note to RFC-Editor: please remove this entire section prior to
      publication. XXX</t>

      <t>Individual draft-00.</t>

      <t><list style="symbols">
          <t>This version contains a description for consideration and comment
          by the TSVWG.</t>
        </list></t>

      <t>Individual draft-01.</t>

      <t><list style="symbols">
          <t>Address Nits</t>

          <t>Change Probe Request and Probe Reponse options to Echo to align
          names with draft-ietf-tsvwg-udp-options</t>

          <t>Remove Appendix B, Informative Description of new UDP Options</t>

          <t>Add additional sections around Packet Probe generation</t>
        </list></t>

      <t>Individual draft-02.</t>

      <t><list style="symbols">
          <t>Address Nits</t>
        </list></t>

      <t>Individual draft-03.</t>

      <t><list style="symbols">
          <t>Add discussion of MSS Option</t>
          <t>Convert references to DPLPMTUD to RFC0001</t>
          <t>double check all section references now RFC8899 is published</t>
          <t>Be explicit that EOL is used for padding</t>
        </list></t>
    </section>
  </back>
</rfc>
