<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
    which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
    There has to be one entity for each item to be referenced.
    An alternate method (rfc include) is described in the references. -->
<!ENTITY RFC768 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC2119 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC4821 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4821.xml">
<!ENTITY RFC8085 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8085.xml">
<!ENTITY RFC8174 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY I-D.ietf-tsvwg-udp-options SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-tsvwg-udp-options-07.xml">
<!ENTITY I-D.ietf-tsvwg-datagram-plpmtud SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-tsvwg-datagram-plpmtud-07.xml">
<!ENTITY RFC8304 SYSTEM "http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8304.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
    please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
    (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
    (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-fairhurst-udp-options-dplpmtud-00.txt"
     ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
                 or pre5378Trust200902
    you can add the attributes updates="NNNN" and obsoletes="NNNN"
    they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the
     full title is longer than 39 characters -->

    <title abbrev="UDPO DPLPMTUD">Datagram PLPMTUD for UDP Options</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Godred Fairhurst" initials="G" surname="Fairhurst">
      <organization>University of Aberdeen</organization>

      <address>
        <postal>
          <street>School of Engineering</street>

          <street>Fraser Noble Building</street>

          <city>Aberdeen</city>

          <region></region>

          <code>AB24 3UE</code>

          <country>UK</country>
        </postal>

        <email>gorry@erg.abdn.ac.uk</email>
      </address>
    </author>

    <author fullname="Tom Jones" initials="T" surname="Jones">
      <organization>University of Aberdeen</organization>

      <address>
        <postal>
          <street>School of Engineering</street>

          <street>Fraser Noble Building</street>

          <city>Aberdeen</city>

          <region></region>

          <code>AB24 3UE</code>

          <country>UK</country>
        </postal>

        <email>tom@erg.abdn.ac.uk</email>
      </address>
    </author>

    <date day="24" month="April" year="2019" />

    <!-- Meta-data Declarations -->

    <area>Transport</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <!-- WG name at the upperleft corner of the doc,
     IETF is fine for individual submissions. If this element is not
     present, the default is "Network Working Group", which is used by the
     RFC Editor as a nod to the history of the IETF. -->

    <keyword>UDP UDP-Options PMTUD PLPMTUD DPLPMTUD</keyword>

    <abstract>
      <t>This document describes how a UDP Options sender may implement
      Datagram Packetization Layer Path Maximum Transmission Unit Discovery
      (DPLPMTUD) as a robust method for Path Maximum Transmission Unit
      Discovery.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>The User Datagram Protocol <xref target="RFC0768"></xref> offers a
      minimal transport service on top of IP and is frequently used as a
      substrate for other protocols. Applications using UDP frequently have to
      implement basic transport services such as Path Maximum Transmission
      Unit Discover (PMTUD) themselves. Section 3.5 of UDP Guidelines (<xref
      target="RFC8085"></xref>) recommends that applications implement some
      form of Path MTU Discovery to avoid the generation of IP fragments:</t>

      <t>"Consequently, an application SHOULD either use the path MTU
      information provided by the IP layer or implement Path MTU Discovery
      (PMTUD)".</t>

      <t>The UDP API <xref target="RFC8304"></xref> offers calls for
      applications to receive ICMP PTB messages and to control the size of
      messages sent, but does not offer any automatic mechanisms for an
      application to discover the maximum packet size supported by a path.
      Applications and upper layer protocols are left to implement robust
      PMTUD mechanisms of their own.</t>

      <t>Packetization Layer PMTUD (PLPMTUD) <xref target="RFC4821"></xref>
      describes a method for a Packetization Layer to search for the largest
      MTU supported on a path in the absence of ICMP PTB messages. Datagram
      PLPMTUD <xref target="I-D.ietf-tsvwg-datagram-plpmtud"></xref> describes
      PMTUD probing and search algorithms for Datagram transports in the
      absence of ICMP PTB messages allowing the Packetization Layer to offer a
      probing mechanism which works in the presence of lost probes. However
      UDP is unable itself to offer the required probing mechanisms to
      implement DPLPMTUD without some additional transport services. This
      document specifies the additional functionality required to perform
      DPLPMTUD with UDP Options as a service to upper-layer protocols. </t>

      <t>The authors solicit comments from the TSV working group. This follows
      the structure used to describe DPLPMTUD for other transports. The
      working group could decide to incorporate the text in the current
      contribution into subsequent versions of the UDP Options
      Specification.</t>
    </section>

    <section title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in BCP 14 <xref
      target="RFC2119"></xref> <xref target="RFC8174"></xref> when, and only
      when, they appear in all capitals, as shown here.</t>
    </section>

    <section anchor="UDPOPT-PLPMTUD" title="DPLPMTUD for UDP Options">
      <t>UDP Options<xref target="I-D.ietf-tsvwg-udp-options"></xref> supplies
      the additional functionality that can be used to implement DPLPMTUD
      within the UDP transport service. Implementing DPLPMTUD using UDP
      Options avoids the need for each upper layer protocol or application to
      implement the DPLPMTUD method.</t>

      <t>Section 5.6 of<xref target="I-D.ietf-tsvwg-udp-options"></xref>
      defines the Maximum Segment Size (MSS) option, which allows the local
      sender to indicate the EMTU_R to the peer. The value received in this
      option can be used to initialise MAX_PMTU.</t>

      <t>The DPLPMTUD method <xref target="I-D.ietf-tsvwg-datagram-plpmtud">
      </xref> relies upon the sender Packetization Layer to be able to
      generate probe packets with a specific size. UDP Options enables padding
      to be added to a UDP datagram that is used as these Probe Packets.
      Feedback confirming reception of each Probe Packet is provided by two
      UDP Options described in section 6 of <xref
      target="I-D.ietf-tsvwg-udp-options"></xref>:</t>

      <t><list style="symbols">
          <t>The Probe Request Option (<xref target="UDPOPT-ECHOREQ"></xref>)
          is set by a sending PL to solicit a response from a remote endpoint.
          A four-byte token identifies each request.</t>

          <t>The Probe Response Option (<xref target="UDPOPT-ECHORES"></xref>
          is generated by the UDP Options receiver in response to reception of
          a previously received Probe Request Option. Each Probe Response
          Option echoes a previously received four-byte token.</t>
        </list>The token value allows implementations to be distinguish
      between acknowledgements for initial probe packets and acknowledgements
      confirming receipt of subsequent probe packets (e.g., travelling along
      alternate paths with a larger RTT). Each probe packet needs to be
      uniquely identifiable by the UDP Options sender within the Maximum
      Segment Lifetime (MSL). The UDP Options sender therefore needs to not
      recycle token values until they have expired or have been acknowledged.
      A four byte value for the token field provides sufficient space for
      multiple unique probes to be made within the MSL.</t>

      <t>The initial value of the four byte token field SHOULD be assigned to
      a randomised value, as described in section 5.1 of <xref
      target="RFC8085"></xref>) to enhance protection from off-path
      attacks.</t>

      <t>Implementations ought to only send a probe packet with a Request
      Probe Option when required by their local state machine, i.e., when
      probing to grow the PLPMTU or to confirm the current PLPMTU. The
      procedure to handle the loss of a response packet is the responsibility
      of the sender of the request. Implementations are allowed to track
      multiple requests and respond to them with a single packet.</t>

      <t>A PL needs to determine that the current path can still support the
      size of datagram that the application is currently sending in the
      DPLPMTUD search_done state (i.e., to detect black-holing of data). One
      way to achieve this is to send probe packets of size PLPMTU or to
      utilise a higher-layer method that provides explicit feedback indicating
      any packet loss.</t>

      <section title="Sending Packet Probes using Control Information">
        <t>The recommended approach to implementing DPLPMTUD sends a a Probe
        Packet that contains only control information together with any
        padding, which is needed to be inflated to the size required for the
        probe packet.</t>

        <t>These probe packets do not carry an application-supplied data
        block, they do not typically require retransmission, although they do
        still consume network capacity and incur endpoint processing (see
        Section 4.1 of <xref
        target="I-D.ietf-tsvwg-datagram-plpmtud"></xref>).</t>
      </section>

      <section title="Sending Packet Probes using Application Data ">
        <t>Another possibility is to utilise data packets (see Section 4.1 of
        <xref target="I-D.ietf-tsvwg-datagram-plpmtud"></xref>). A probe
        packet then contains a data block supplied by an application that is
        combined with padding to inflate the length of the datagram to the
        size required for the probe and additionally contains a Timestamp
        Option.</t>

        <t>Reception of a valid Timestamp Option that was echoed by the remote
        endpoint can be used to infer connectivity. This can provide useful
        feedback even over paths with asymmetric capacity and/or that carry
        UDP Option flows that have very asymmetric datagram rates, because an
        echo of the most recent timestamp still indicates reception of at
        least one packet of the transmitted size. This is sufficient to
        confirm there is no black hole.</t>

        <t>If the application/transport needs protection from the loss of this
        probe packet, the application/ transport could perform transport-layer
        retransmission/repair of the data block (e.g., by retransmission after
        loss is detected or by duplicating the data block in a datagram
        without the padding) <xref target="RFC8085"></xref>.</t>

        <t>When sending a probe to increase the PLPMTU, a timestamp might be
        unable to unambiguously identify that a specific probe packet has been
        received. Timestamp mechanisms cannot be used to confirm the reception
        of individual probe messages and cannot be used to stimulate a
        response from the remote peer.</t>
      </section>

      <section title="Validating the Path with UDP Options">
        <t>The UDP sender validates the responses to a Packet Probe <xref
        target="I-D.ietf-tsvwg-datagram-plpmtud"></xref> using the UDP port
        information in combination with the token and/or timestamp value
        contained in the UDP Option.</t>
      </section>

      <section title="Handling of PTB Messages by UDP Options">
        <t>The UDP sender validates any received ICMP PTB message that is
        received in response to a Packet Probe <xref
        target="I-D.ietf-tsvwg-datagram-plpmtud"></xref> using the quoted
        packet to validate the UDP port information in combination with the
        token and/or timestamp value contained in the UDP Option.</t>
      </section>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>Gorry Fairhurst and Tom Jones are supported by the University of
      Aberdeen.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This memo includes no requests to IANA</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>The security considerations for are described in <xref
      target="I-D.ietf-tsvwg-udp-options"></xref>. The proposed new method
      does not change the integrity protection offered by the UDP options
      method.</t>
    </section>

    <section title="Annexe">
      <t>XXX RFC Editor remove this section before publication. XXX</t>

      <t>This annexe contains a provisional description of the UDP Options
      that will be specified in <xref
      target="I-D.ietf-tsvwg-udp-options"></xref>. The information is provided
      for information only to enable understanding of the algorithm and will
      be superseded by the UDP Options specification.</t>

      <section anchor="UDPOPT-ECHOREQ" title="UDP Probe Request Option">
        <t>RFC Editor remove this section before publication</t>

        <t>The Probe Request Option allows a sending endpoint to solicit a
        response from a destination endpoint.</t>

        <t>The Probe Request Option carries a four byte token set by the
        sender. This token can be set to a value that is likely to be known
        only to the sender (and is sent along the end-to-end path). The
        initial value of the token SHOULD be assigned to a randomised value,
        as described in section 5.1 of <xref target="RFC8085"></xref>) to
        enhance protection from off-path attacks.</t>

        <t>The sender needs to then check the value returned in the UDP Probe
        Response Option. The value of the Token field, uniquely identifies a
        probe within the maximum segment lifetime.</t>

        <figure anchor="fig-echoreq" title="UDP Probe REQ Option Format">
          <artwork align="center"><![CDATA[
                  +----------+--------+-----------------+
                  | Kind=TBD | Len=6  |     Token       |
                  +----------+--------+-----------------+
                  1 byte    1 byte       4 bytes
              ]]></artwork>
        </figure>
      </section>

      <section anchor="UDPOPT-ECHORES" title="UDP Probe Response Option">
        <t>The Probe Response Option is generated in response to reception of
        a previously received Probe Request Option. This response is generated
        by the UDP Option processing.</t>

        <t>The Probe Response Option carries a four byte token field. The
        Token field associates the response with the Token value carried in
        the most recently-received Echo Request. The rate of generation of UDP
        packets carrying a Probe Response Option is expected to be less than
        once per RTT and SHOULD be rate-limited (see <xref
        target="Security"></xref>).</t>

        <figure anchor="fig-echores" title="UDP Probe RES Option Format">
          <artwork align="center"><![CDATA[
          +----------+--------+-----------------+
          | Kind=TBD | Len=6  |     Token       |
          +----------+--------+-----------------+
            1 byte    1 byte       4 bytes
  ]]></artwork>
        </figure>
      </section>
    </section>
  </middle>

  <back>
    <!-- References split into informative and normative -->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->

      &RFC768;

      &RFC2119;

      &RFC4821;

      &RFC8085;

      &RFC8174;

      &I-D.ietf-tsvwg-udp-options;

      &I-D.ietf-tsvwg-datagram-plpmtud;
    </references>

    <references title="Informative References">
      &RFC8304;
    </references>

    <section title="Revision Notes">
      <t>Note to RFC-Editor: please remove this entire section prior to
      publication.</t>
    </section>
  </back>
</rfc>
